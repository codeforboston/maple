# Important:
# - Run this using `yarn compose`
# - Make sure you use docker compsoe v2: `docker compose version`
#   https://docs.docker.com/compose/#compose-v2-and-the-new-docker-compose-command

version: "3"
name: maple
services:
  search:
    build:
      dockerfile: Dockerfile.search
    volumes:
      - search:/app/data
    ports:
      - 8108:8108
    environment:
      TYPESENSE_DATA_DIR: /app/data
      TYPESENSE_API_KEY: test-api-key
      TYPESENSE_ENABLE_CORS: "true"
    cpu_count: 2
    healthcheck:
      test: curl -f localhost:8108/health || exit 1
      interval: 10s
      timeout: 2s
      retries: 3
      start_period: 5s

  firebase:
    build:
      context: ..
      dockerfile: infra/Dockerfile.firebase
    command: yarn emulators:start
    working_dir: /app
    depends_on:
      init:
        condition: service_completed_successfully
    healthcheck:
      test: curl -f localhost:5001/demo-dtp/us-central1/healthCheck || exit 1
      interval: 30s
      timeout: 5s
      retries: 30
      start_period: 30s
    volumes:
      - ..:/app

      # Override env for running in compose
      - ./.env.functions-compose:/app/functions/.env.demo-dtp

      # Override firebase.json to bind to all container interfaces
      - ./firebase.compose.json:/app/firebase.json
    ports:
      - 9099:9099
      - 5001:5001
      - 8080:8080
      - 3010:3010
      - 8085:8085
      - 9199:9199
      - 4400:4400
      - 4500:4500
      - 9299:9299
      - 9150:9150

  search-backfill:
    build:
      dockerfile: Dockerfile.node
    command: yarn dev:backfill
    environment:
      FIREBASE_HOST: firebase
    working_dir: /app
    depends_on:
      firebase:
        condition: service_healthy
      search:
        condition: service_healthy
    volumes:
      - ..:/app

  init:
    build:
      dockerfile: Dockerfile.node
    command: sh -c 'yarn --immutable && yarn --cwd functions build'
    # command: "true"
    working_dir: /app
    volumes:
      - ..:/app

  fn-builder:
    build:
      dockerfile: Dockerfile.node
    command: yarn --cwd functions build:watch
    working_dir: /app
    depends_on:
      init:
        condition: service_completed_successfully
    volumes:
      - ..:/app

  next:
    build:
      dockerfile: Dockerfile.node
    command: yarn dev
    working_dir: /app
    depends_on:
      init:
        condition: service_completed_successfully
    ports:
      - 3000:3000
    volumes:
      - ..:/app
    environment:
      NEXT_PUBLIC_TYPESENSE_SEARCH_API_KEY: test-api-key
      NEXT_PUBLIC_TYPESENSE_API_URL: http://localhost:8108
      NEXT_PUBLIC_USE_EMULATOR: "true"
      SERVER_EMULATOR_HOST: firebase
      NEXT_PUBLIC_PROJECT_ID_FOR_TEST: demo-dtp
      GCLOUD_PROJECT: "demo-dtp"
      FIRESTORE_EMULATOR_HOST: "firebase:8080"
      FIREBASE_AUTH_EMULATOR_HOST: "firebase:9099"
      FIREBASE_STORAGE_EMULATOR_HOST: "firebase:9199"
      TYPESENSE_API_URL: "http://firebase:8108"
      TYPESENSE_API_KEY: "test-api-key"

  copy-handlebars:
    build:
      context: ..
      dockerfile: infra/Dockerfile.firebase
    command: yarn copy-handlebars
    depends_on:
      - firebase
    volumes:
      - ..:/app

  backfill-user-emails:
    build:
      context: ..
      dockerfile: infra/Dockerfile.firebase
    command: yarn backfill-user-emails
    depends_on:
      - firebase
    volumes:
      - ..:/app

  backfill-user-nf:
    build:
      context: ..
      dockerfile: infra/Dockerfile.firebase
    command: yarn backfill-user-nf
    depends_on:
      - firebase
    volumes:
      - ..:/app

volumes:
  search: {}
