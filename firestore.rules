rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /events/{id} {
      // public, read-only 
      allow read: if true;
      allow write: if false;
    }
    match /generalCourts/{document=**} {
      // public, read-only 
      allow read: if true;
      allow write: if false;
    }
    match /billTracker/{document=**} {
      // public, read-only 
      allow read: if true;
      allow write: if false;
    }
    match /profiles/{uid} {

      // Always visible to the user and public if `public` is true.
      // Only writable by the user.
      // Do not allow users to delete their profile, set the role field.
      // Only normal "user" roles can toggle visibility.
      allow read: if resource.data.public || request.auth.uid == uid
      // or if the profile is an organization.
      // allow read: if resource.data.public || request.auth.uid == uid || userRole() == "admin"   
      allow read, write: if true || userRole() == "admin"   
      allow create: if validUser() && request.resource.data.role == 'user' && request.resource.data.public == false
      allow update: if validUser() && validRoleChange() && validPublicChange()
    }


    // Allow querying publications individually or with a collection group.
    match /{path=**}/publishedTestimony/{id} {
      // public, read-only
      allow read: if true
      allow write: if false
    }
    match /{path=**}/reports/{id} {
      allow read, write: if true; //temp for development
    } 
    match /reports/{rid} {
      function isAdmin() {
        return request.auth.token.get("role", "user") == "admin"
      }
      // Anyone can report
      allow create: if true
      // Only admins can do anything with it
      allow read, update, delete: if isAdmin()
    }
    match /{path=**}/users/{uid} {

      allow read: if true
      allow write: if false

    function validUser() {
      return request.auth.uid != null
    }

    function userRole() {
      return request.auth.token.get("role", "user")
    }

    function validRoleChange() {
      return !request.resource.data.diff(resource.data).affectedKeys().hasAny(['role'])
    }

    function validPublicChange() {
      return !request.resource.data.diff(resource.data).affectedKeys().hasAny(['public'])
        || userRole() == "user"
    }

    match /draftTestimony/{id} {
      // private, only accessible by the user
      allow read, write: if request.auth.uid == uid
    }
    match /archivedTestimony/{id} {
      allow read, write: if request.auth.uid == uid
    }
  }
  match /events/{id} {
    // public, read-only 
    allow read: if true;
    allow write: if false;
  }
  match /reports/{id} {
    allow read: if true; 
    allow write: if true; // temp for development
  // reporter uid has to match the user uid writing the document
  }
  match /admins/{id} {
    allow read, write: if true;
  }
}
}
